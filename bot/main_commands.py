import copy
from datetime import datetime

from bot import data
from bot import lines
from bot import timetable
from bot import keyboards, exceptions

from aiogram import types


async def process_start_command(message: types.Message):
    chat_id = str(message.chat.id)
    if message.from_user.id not in data.waiting_for_group_num:
        data.waiting_for_group_num.append(message.from_user.id)

    msg = "‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ! –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –æ–±—Å–ª—É–∂–∏–≤–∞—é *—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∏ –≤—Ç–æ—Ä—ã–µ –∫—É—Ä—Å—ã* ‚ùó"

    await data.bot.send_message(chat_id, text=msg, parse_mode="Markdown")

    msg = "üëã_ –ï—â—ë —Ä–∞–∑ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!_* \n\n*–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π –æ—á–µ–Ω—å –ª–µ–≥–∫–æ. "
    msg += "*–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ üì≤*"

    await data.bot.send_message(chat_id, text=msg, parse_mode="Markdown", reply_markup=keyboards.ReplyKeyboardRemove())




async def process_help_command(message: types.Message):
    msg_text = ""

    chat_id = str(message.chat.id)

    hlp = "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:   "
    hlp += "\n   /start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"
    hlp += "\n   /set <–Ω–æ–º–µ—Ä_–≥—Ä—É–ø–ø—ã> - —Ç–∞–∫ –≤—ã —É–∫–∞–∂–µ—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É"
    hlp += "\n   /groups - —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –≥—Ä—É–ø–ø—ã –º—ã –æ–±—Å–ª—É–∂–∏–≤–∞–µ–º"
    hlp += "\n   /today, /yesterday, /tomorrow - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –≤—á–µ—Ä–∞ –∏ –∑–∞–≤—Ç—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ"
    hlp += "\n   /schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é"
    hlp += "\n   /week - —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –Ω–µ–¥–µ–ª—è (1-—è –∏–ª–∏ 2-—è)"
    hlp += "\n   /mon, /tue, /wed, /thu, /fri, /sat - –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–æ–æ—Ç–≤. –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏"
    hlp += "\n   /help - —Å–ø—Ä–∞–≤–∫–∞ –æ –∫–æ–º–∞–Ω–¥–∞—Ö (–∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–π—á–∞—Å –Ω–∞–±–ª—é–¥–∞–µ—Ç–µ)"

    msg_text = hlp

    await data.bot.send_message(chat_id, text=msg_text)

async def process_set_command(message: types.Message):
    reply_text = ""

    group = message.get_args()

    user_id = str(message.from_user.id)

    if timetable.is_there_such_a_group(group):
        reply_text += "*–û—Ç–ª–∏—á–Ω–æ! üòã*"
        reply_text += "\n\n_–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å._"
        await message.reply(reply_text, reply_markup=keyboards.short_keyborad, parse_mode="Markdown")
        data.users_and_groups[user_id] = group

    else:
        reply_text = "–ö–∞–∂–µ—Ç—Å—è, –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ –≤–≤–µ–ª–∏. –õ–∏–±–æ —É –º–µ–Ω—è –ø–æ–∫–∞ –Ω–µ—Ç—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã...\n\n‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ! –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –æ–±—Å–ª—É–∂–∏–≤–∞—é *—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∏ –≤—Ç–æ—Ä—ã–µ –∫—É—Ä—Å—ã* ‚ùó"
        await message.reply(reply_text, reply_markup=keyboards.start_keyboard, parse_mode="Markdown")



async def process_groups_command(message: types.Message):
    reply_text = ""

    chat_id = str(message.chat.id)

    reply_text += "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –æ–±—Å–ª—É–∂–∏–≤–∞—é —Ç–æ–ª—å–∫–æ 1-–π –∏ 2-–π –∫—É—Ä—Å—ã –¥–Ω–µ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã –æ–±—É—á–µ–Ω–∏—è."
    reply_text += "\n–†–∞–∑–±–∏—Ä–∞—Ç—å—Å—è —Å –º–∏—Ä–∏–∞–¥–æ–π —Ñ–∞–π–ª–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π —Å—Ç–∞—Ä—à–∏—Ö –∫—É—Ä—Å–æ–≤ –º–µ–Ω—è –ø–æ–∫–∞ –Ω–µ –Ω–∞—É—á–∏–ª–∏..."

    reply_text += "\n\n–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø:\n\n"

    for key in data.schedule:
        reply_text += "{}, ".format(key)

    await data.bot.send_message(chat_id, text=reply_text)


async def process_week_command(message: types.Message):
    week_num = timetable.get_current_week()

    date = datetime.today()
    weekday = datetime.weekday(date)
    if weekday == 6:
        if weekday == 1:
            weekday = 2
        else:
            weekday = 1
        msg_text = "–° –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è {}-—è –Ω–µ–¥–µ–ª—è üëå".format(weekday)
    else:
        msg_text = "–°–µ–π—á–∞—Å {}-—è –Ω–µ–¥–µ–ª—è üëå".format(week_num)

    await data.bot.send_message(message.chat.id, text=msg_text, parse_mode="Markdown", reply_markup=keyboards.bntu_keyboard)

async def process_remove_command(message: types.Message):
    await message.reply("–£–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π", reply_markup=keyboards.ReplyKeyboardRemove())

def setup():
    data.dp.register_message_handler(process_start_command, commands="start", content_types=['text'], state='*')
    data.dp.register_message_handler(process_help_command, commands="help", content_types=['text'], state='*')
    data.dp.register_message_handler(process_set_command, commands="set", content_types=['text'], state='*')
    data.dp.register_message_handler(process_groups_command, commands="groups", content_types=['text'], state='*')
    data.dp.register_message_handler(process_week_command, commands="week", content_types=['text'], state='*')
    data.dp.register_message_handler(process_remove_command, commands="remove", content_types=['text'], state='*')
