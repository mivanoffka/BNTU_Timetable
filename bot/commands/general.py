import random
from datetime import datetime

from bot import *

from aiogram import types


async def process_start_command(message: types.Message):
    chat_id = str(message.chat.id)
    if message.from_user.id not in data.waiting_for_group_num:
        data.waiting_for_group_num.append(message.from_user.id)

    msg = "‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ! –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –æ–±—Å–ª—É–∂–∏–≤–∞—é *—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∏ –≤—Ç–æ—Ä—ã–µ –∫—É—Ä—Å—ã* ‚ùó"

    await data.bot.send_message(chat_id, text=msg, parse_mode="Markdown")

    msg = "üëã_ –ï—â—ë —Ä–∞–∑ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!_* \n\n*–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π –æ—á–µ–Ω—å –ª–µ–≥–∫–æ. "
    msg += "*–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ üì≤*"

    await data.bot.send_message(chat_id, text=msg, parse_mode="Markdown", reply_markup=keyboards.ReplyKeyboardRemove())


async def process_set_command(message: types.Message):
    reply_text = ""

    group = message.get_args()

    user_id = str(message.from_user.id)

    if timetable.is_there_such_a_group(group):
        reply_text += "*–û—Ç–ª–∏—á–Ω–æ! ü•≥*"
        reply_text += "\n\n_–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å._"
        await message.reply(reply_text, reply_markup=keyboards.short_keyborad, parse_mode="Markdown")
        data.users_and_groups[user_id] = group

    else:
        reply_text = "ü•≤ –ö–∞–∂–µ—Ç—Å—è, –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ –≤–≤–µ–ª–∏. –õ–∏–±–æ —É –º–µ–Ω—è –ø–æ–∫–∞ –Ω–µ—Ç—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã..." \
                     "\n\n‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ! –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –æ–±—Å–ª—É–∂–∏–≤–∞—é *—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∏ –≤—Ç–æ—Ä—ã–µ –∫—É—Ä—Å—ã* ‚ùó"
        await message.reply(reply_text, reply_markup=keyboards.start_keyboard, parse_mode="Markdown")


async def advertise(user_id):
    value = random.randint(0, 100)
    if value < 10:
        msg = "<b>–ï—Å–ª–∏ –≤—ã –¥–æ–≤–æ–ª—å–Ω—ã –±–æ—Ç–æ–º, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ " \
              "—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –Ω—ë–º –¥—Ä—É–∑—å—è–º!</b>\n\nüí´ http://t.me/bntu_timetable_bot"
        await data.bot.send_message(user_id, text=msg, parse_mode="HTML", disable_web_page_preview=True)


async def process_week_command(message: types.Message):
    if data.interactions_count["week"] < 9999999:
        data.interactions_count["week"] += 1

    week_num = timetable.get_current_week()
    data.interactions_count["week"] += 1
    date = datetime.today()
    weekday = datetime.weekday(date)
    if weekday == 6:
        if weekday == 1:
            weekday = 2
        else:
            weekday = 1
        msg_text = "_–° –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è {}-—è –Ω–µ–¥–µ–ª—è..._ üëå".format(weekday)
    else:
        msg_text = "_–°–µ–π—á–∞—Å {}-—è –Ω–µ–¥–µ–ª—è!_ üëå".format(week_num)

    await data.bot.send_message(message.chat.id, text=msg_text, parse_mode="Markdown", reply_markup=keyboards.bntu_keyboard)


def setup():
    data.dp.register_message_handler(process_start_command, commands="start", content_types=['text'], state='*')
    data.dp.register_message_handler(process_set_command, commands="set", content_types=['text'], state='*')
    data.dp.register_message_handler(process_week_command, commands="week", content_types=['text'], state='*')
