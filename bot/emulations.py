from bot import data, main_commands, weekdays_commands, exceptions, keyboards, days_commands, in_out
from aiogram import types
import copy


async def handle_emul_commands(msg: types.message):
    if msg.from_user.id in data.waiting_for_group_num:
        await continue_setting(msg)

    else:
        if msg.text == keyboards.today_button.text:
            await days_commands.process_today_command(msg)

        elif msg.text == keyboards.tomorrow_button.text:
            await days_commands.process_tomorrow_command(msg)

        elif msg.text == keyboards.set_button.text or msg.text == keyboards.new_group_button.text:
            await start_setting(msg.from_user.id)

        elif msg.text == keyboards.another_day_button.text:
            await another_days(msg)

        elif msg.text == keyboards.week_button.text:
            await main_commands.process_week_command(msg)

        elif msg.text == keyboards.mon_button.text:
            await weekdays_commands.process_mon_command(msg)

        elif msg.text == keyboards.tue_button.text:
            await weekdays_commands.process_tue_command(msg)

        elif msg.text == keyboards.wed_button.text:
            await weekdays_commands.process_wed_command(msg)

        elif msg.text == keyboards.thu_button.text:
            await weekdays_commands.process_thu_command(msg)

        elif msg.text == keyboards.fri_button.text:
            await weekdays_commands.process_fri_command(msg)

        elif msg.text == keyboards.sat_button.text:
            await weekdays_commands.process_sat_command(msg)

        elif msg.text == keyboards.schedule_button.text:
            await days_commands.process_schedule_command(msg)

        elif msg.text == keyboards.bntu_button_3.text:
            await data.bot.send_message(msg.from_user.id, text="‚úñÔ∏è –≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"
                                                               " –∫ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É –ë–µ–ª–æ—Ä—É—Å—Å–∫–æ–≥–æ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ"
                                                               " –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –∏ —Å–æ–∑–¥–∞–Ω –Ω–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞—á–∞–ª–∞—Ö."
                                                               "\n\n*‚ùó –ó–∞ –≤—Å–µ–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —Å—Ç–æ–∏—Ç"
                                                               " –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–∞–π—Ç—É –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.*\n\n_üåê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º"
                                                               " –≤–∞–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Å–≤–µ—Ä—è—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∑–¥–µ—Å—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
                                                               " —Å –µ–≥–æ –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º –Ω–∞ —Å–∞–π—Ç–µ._",
                                        reply_markup=keyboards.bntu_keyboard_2, parse_mode="Markdown")
            await main_commands.advertise(msg.from_user.id)

        elif msg.text == keyboards.help_button.text:
            txt = "<u>–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å.</u>"\
"<b>\n\n‚ùì –ü–æ—á–µ–º—É –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ 1-–≥–æ –∏ 2-–≥–æ –∫—É—Ä—Å–∞?</b>"\
"<i>\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π —Å–≤–µ–¥–µ–Ω—ã –≤ –æ–¥–Ω—É —Ç–∞–±–ª–∏—Ü—É Excel —Ç–æ–ª—å–∫–æ –¥–ª—è –º–ª–∞–¥—à–∏—Ö –∫—É—Ä—Å–æ–≤. –£ —Å—Ç–∞—Ä—à–∏—Ö –∂–µ –∫—É—Ä—Å–æ–≤ –æ–Ω–æ —Ä–∞–∑–±—Ä–æ—Å–∞–Ω–æ –ø–æ –¥–µ—Å—è—Ç–∫—É —Ç–∞–±–ª–∏—Ü, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π. "\
"\n\n–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —è –ø–ª–∞–Ω–∏—Ä—É—é –¥–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π 3-–≥–æ –∏ 4-–≥–æ –∫—É—Ä—Å–∞, <u>–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –§–ò–¢–†.</u> –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è... üòî</i>"\
"<b>\n\n‚ùì –ü–æ—á–µ–º—É –¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –ø–æ–¥–≥—Ä—É–ø–ø–∞–º –∏ –Ω–µ–¥–µ–ª—è–º –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–º—É, –∫–∞–∫ –º–æ—è –≥—Ä—É–ø–ø–∞ –≤ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ö–æ–¥–∏—Ç –Ω–∞ –ø–∞—Ä—ã?</b>"\
"<i>\n\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∑—è—Ç–æ –≤ ¬´—Å—ã—Ä–æ–º¬ª –≤–∏–¥–µ –ø—Ä—è–º–æ —Å —Å–∞–π—Ç–∞ –ë–ù–¢–£. –í —Ä–∞–º–∫–∞—Ö –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã —Å—Ç—É–¥–µ–Ω—Ç—ã, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç—Å—è –æ —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–∞—á–µ, —á–µ–º —Ç–∞–º –æ—Ç—Ä–∞–∂–µ–Ω–æ. –ù–æ –æ–± —ç—Ç–æ–º –∑–Ω–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã —Å–∞–º–∏. –ï—Å–ª–∏ –≤–∞–º –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ ‚Äì –º–æ–∂–µ—Ç –±—ã—Ç—å, –º—ã —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞–µ–º.</i>"\
"<b>\n\n‚ùì –ü–æ—á–µ–º—É –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω—è—Ç–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–µ—á–∏—Ç–∞–µ–º—ã–º –æ–±—Ä–∞–∑–æ–º?</b>"\
"<i>\n\n–ü—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—á–µ–∫ —á–∞—Å—Ç–æ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è –æ—à–∏–±–∫–∏ –∏ —Å–ª—É—á–∞—é—Ç—Å—è —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –ø–æ —Å–º—ã—Å–ª—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–∫–æ–µ –Ω–µ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–º–æ–∂–Ω–æ. –°—Ç–∞—Ä–∞—é—Å—å –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å</i>"\
            "\n\n<b>–ï—Å–ª–∏ –µ—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã - –ø–∏—à–∏—Ç–µ –º–Ω–µ!</b>"
            await data.bot.send_message(msg.from_user.id, text=txt,
                                        reply_markup=keyboards.links_keyboard, parse_mode="HTML", )
            await main_commands.advertise(msg.from_user.id)

        elif msg.text == keyboards.ret_button.text:
            await data.bot.send_message(msg.from_user.id, text="_–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è..._",
                                        reply_markup=keyboards.menu_keyboard, parse_mode="Markdown")
            await main_commands.advertise(msg.from_user.id)

        elif msg.text == keyboards.settings_button.text:
            await data.bot.send_message(msg.from_user.id, text="_–û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–ø—Ü–∏–∏..._",
                                        reply_markup=keyboards.options_keyboard, parse_mode="Markdown")
            await main_commands.advertise(msg.from_user.id)

        elif msg.text == keyboards.mivanoffka_button.text:
            await mivanoffka(msg)
            await main_commands.advertise(msg.from_user.id)

        elif msg.text == keyboards.open_menu_button.text:
            await data.bot.send_message(msg.from_user.id, text="_–û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é..._",
                                        reply_markup=keyboards.menu_keyboard, parse_mode="Markdown")
            await main_commands.advertise(msg.from_user.id)

        elif msg.text == keyboards.open_menu_button_2.text:
            await data.bot.send_message(msg.from_user.id, text="_–û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é..._",
                                        reply_markup=keyboards.weekdays_keyboard, parse_mode="Markdown")
            await main_commands.advertise(msg.from_user.id)

        else:
            return False

    return True


async def mivanoffka(message: types.Message):
    msg = "<b>–í–æ—Ç –æ–Ω ‚Äî <u>–ú–∞–∫—Å–∏–º–∫–∞ –ò–≤–∞–Ω–æ—Ñ—Ñ–∫–∞!</u></b> ü§ó \n"\
          "<i>\n–ú–æ–π –±–µ—Å–ø–æ–¥–æ–±–Ω—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–∞ –∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫!</i>"

    await data.bot.send_message(message.from_user.id, text=msg, parse_mode="HTML", reply_markup=keyboards.links_keyboard)


async def another_days(msg: types.Message):
    await data.bot.send_message(msg.from_user.id, text="_–°–º–æ—Ç—Ä–∏–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏..._",
                                reply_markup=keyboards.weekdays_keyboard, parse_mode="Markdown")


async def start_setting(user_id):
    if user_id not in data.waiting_for_group_num:
        data.waiting_for_group_num.append(user_id)

    msg_text = " üì≤ _–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ._"

    await data.bot.send_message(user_id, text=msg_text, reply_markup=keyboards.ReplyKeyboardRemove(), parse_mode="Markdown")


async def continue_setting(message: types.Message):
    data.waiting_for_group_num.remove(message.from_user.id)

    new_message = types.Message()
    new_message = copy.copy(message)
    new_message.text = "/set {}".format(message.text)

    await main_commands.process_set_command(new_message)
